[{"data":1,"prerenderedAt":2000},["ShallowReactive",2],{"navigation":3,"index":22,"index-blogs":209,"mdc-8fxh1l-key":1971,"mdc--e64xyy-key":1982,"mdc-vluk80-key":1991},[4],{"title":5,"path":6,"stem":7,"children":8,"page":21},"Blog","/blog","blog",[9,13,17],{"title":10,"path":11,"stem":12},"Git Cheatsheet: Essential Commands for Developers","/blog/git-cheatsheet","blog/git-cheatsheet",{"title":14,"path":15,"stem":16},"Why Vue is the Most Reliable Framework for the Long Haul","/blog/why-vue-is-the-most-reliable-framework-for-the-long-haul","blog/why-vue-is-the-most-reliable-framework-for-the-long-haul",{"title":18,"path":19,"stem":20},"Write better Typescript and less Unit Testing","/blog/write-better-typescript-and-less-unit-testing","blog/write-better-typescript-and-less-unit-testing",false,{"id":23,"title":24,"about":25,"blog":28,"body":31,"description":35,"experience":155,"extension":165,"faq":166,"hero":182,"meta":193,"navigation":194,"path":195,"seo":196,"stem":197,"testimonials":198,"__hash__":208},"index/index.yml","Hey, I'm Zafar",{"title":26,"description":27},"About Me","I'm in love with creating useful and impactful products that brings people together. Experienced in multiple industries designing, simplifying, building and scaling solutions for startups and the enterprise. Using first-principle thinking.\n\nMy approach is simple: Iterate fast, iterate often, and dont stop iterating. And never say no, just dwell on it for a good moment.\n",{"title":29,"description":30},"Latest Articles","Thoughts on technology and business",{"seo":32,"title":24,"description":35,"hero":36,"about":64,"experience":65,"testimonials":96,"blog":118,"faq":119},{"title":33,"description":34},"Zafar.dev | Dont Sop Building","My primary focus is on creating useful and impactful products that make a real difference in people's lives. Over the course of my career, I gained extensive experience in designing, simplifying, coding and scaling various processes and solutions for startups, which has helped me develop a strong track record of success in achieving clients' goals and objectives.","Professional Code Deleter. What are we building next?",{"links":37,"images":45},[38,42],{"label":39,"to":40,"color":41},"Le Resume","https://docs.google.com/document/d/e/2PACX-1vTqFnfyHNvn48h_-v__nIAxO77b1cJLzTVT_O5cpRvjzDlYLy6bwhQZcagAiF5dXc21eblTIPVgJy6y/pub","neutral",{"label":43,"to":44},"Contact Me","#contact",[46,50,53,56,59,61],{"src":47,"link":48,"alt":49},"https://r2.zafar.dev/img/digi/digi-cybersafe.png","/projects","Digi",{"src":51,"link":48,"alt":52},"https://r2.zafar.dev/img/others/taberuuu-logo-min.png","Halal Navi",{"src":54,"link":48,"alt":55},"https://r2.zafar.dev/img/axa/logo.png","AXA",{"src":57,"link":48,"alt":58},"https://r2.zafar.dev/img/halalnavi/1.png","Taberuuu",{"src":60,"link":48,"alt":58},"https://r2.zafar.dev/img/seekers/1.png",{"src":62,"link":48,"alt":63},"https://r2.zafar.dev/img/building-blocks.png","Building Blocks",{"title":26,"description":27},{"title":66,"items":67},"Work Experience",[68,76,83,90],{"position":69,"date":70,"company":71},"Software Engineer at","2023 - Present",{"name":72,"logo":73,"url":74,"color":75},"AXA Japan","","https://axa.co.jp/","#00008F",{"position":77,"date":78,"company":79},"Lead Developer at","2019 - 2023",{"name":80,"logo":73,"url":81,"color":82},"Seekers","https://seekers.my","#FF6363",{"position":84,"date":85,"company":86},"Senior Web Application Developer at","2020 - 2023",{"name":87,"logo":73,"url":88,"color":89},"KL Wing","https://recruit.jobsearch-asia.com/","#5E6AD2",{"position":91,"date":92,"company":93},"Product Manager at","2017 - 2021",{"name":52,"logo":73,"url":94,"color":95},"https://halal-navi.com","#4CAF50",[97,104,111],{"quote":98,"author":99},"Its difficult to find someone who is as dedicated as you are. You helped us out a lot.",{"name":100,"description":101,"avatar":102},"Yuya Suzuki","Director - JSA | KLWing",{"src":103},"https://r2.zafar.dev/img/suzuki.jpg",{"quote":105,"author":106},"Thank you for helping us to grow. Even during the tough times.",{"name":107,"description":108,"avatar":109},"Shusaku Ueda","Director - Seekers",{"src":110},"https://r2.zafar.dev/img/ueda.jpg",{"quote":112,"author":113},"Relentless work. Gets the job done.",{"name":114,"description":115,"avatar":116},"Hidayat","Fronyx Gmbh",{"src":117},"https://r2.zafar.dev/img/py.jpg",{"title":29,"description":30},{"title":120,"description":121,"categories":122},"Frequently Asked Questions","Answers to common questions about my process and services.",[123,135,147],{"title":124,"questions":125},"Services & Process",[126,129,132],{"label":127,"content":128},"What services do you offer?","I specialize in full-stack development and product management. This includes designing, simplifying, building and scaling solutions for startups using first-principle thinking. My expertise spans multiple industries, and I focus on creating useful and impactful products that make a real difference in people's lives.\n",{"label":130,"content":131},"What is your development process like?","My process is collaborative and iterative, typically involving a strong customer-developer feedback loop and focus on delivering value quickly. Communication is key, and there is no room for ego in the pursuit of excellence.\n",{"label":133,"content":134},"Do you work with startups?","Absolutely! I love working with startups to help shape their product vision and create solutions from the ground up. I've been involved in multiple zero-to-one startups and have experience taking ideas to MVP in as little as 1 week, and to product launch in as little as 2 weeks.\n",{"title":136,"questions":137},"Technical Skills",[138,141,144],{"label":139,"content":140},"What programming languages do you work with?","I work with Typescript, Python, Dart, Go, Java, and I'm currently learning Rust. I'm comfortable with both frontend and backend development.\n",{"label":142,"content":143},"What frameworks and technologies do you use?","For frontend: VueJS/Nuxt, React/Nextjs, Vite, Svelte\nFor backend: Nitro, Springboot, Directus, Laravel\nFor mobile: Flutter, Ionic\nFor DevOps: Nginx, Kubernetes, Pipeline/Actions, CircleCI, Serverless/CDK\nFor Cloud: AWS, Cloudflare, CodeMagic CI/CD, Actions, Cloudinary\n",{"label":145,"content":146},"Do you have experience with AI/ML?","Yes, I work with CF Workers AI, Qdrant, and Vectorize. I also have experience with search technologies like Elasticsearch, Meilisearch, and Algolia.\n",{"title":26,"questions":148},[149,152],{"label":150,"content":151},"What do you enjoy most about your work?","I love creating useful and impactful products that make a real difference in people's lives. It's incredibly rewarding to see people interact with something I've built and find it genuinely useful. I enjoy the challenge of solving complex problems and the constant learning that comes with working in technology.\n",{"label":153,"content":154},"Where are you based?","I'm currently based in Tokyo, Japan. However, I work remotely with clients from around the world.\n",{"title":66,"items":156},[157,159,161,163],{"position":69,"date":70,"company":158},{"name":72,"logo":73,"url":74,"color":75},{"position":77,"date":78,"company":160},{"name":80,"logo":73,"url":81,"color":82},{"position":84,"date":85,"company":162},{"name":87,"logo":73,"url":88,"color":89},{"position":91,"date":92,"company":164},{"name":52,"logo":73,"url":94,"color":95},"yml",{"title":120,"description":121,"categories":167},[168,173,178],{"title":124,"questions":169},[170,171,172],{"label":127,"content":128},{"label":130,"content":131},{"label":133,"content":134},{"title":136,"questions":174},[175,176,177],{"label":139,"content":140},{"label":142,"content":143},{"label":145,"content":146},{"title":26,"questions":179},[180,181],{"label":150,"content":151},{"label":153,"content":154},{"links":183,"images":186},[184,185],{"label":39,"to":40,"color":41},{"label":43,"to":44},[187,188,189,190,191,192],{"src":47,"link":48,"alt":49},{"src":51,"link":48,"alt":52},{"src":54,"link":48,"alt":55},{"src":57,"link":48,"alt":58},{"src":60,"link":48,"alt":58},{"src":62,"link":48,"alt":63},{},true,"/",{"title":33,"description":34},"index",[199,202,205],{"quote":98,"author":200},{"name":100,"description":101,"avatar":201},{"src":103},{"quote":105,"author":203},{"name":107,"description":108,"avatar":204},{"src":110},{"quote":112,"author":206},{"name":114,"description":115,"avatar":207},{"src":117},"5DJlbez2JAQO6H7DIDYbISSxjsR7CM_9gDONSYIbIDk",[210,300,1704],{"id":211,"title":14,"author":212,"body":216,"date":293,"description":294,"extension":295,"image":296,"meta":297,"minRead":285,"navigation":194,"path":15,"seo":298,"stem":16,"__hash__":299},"blog/blog/why-vue-is-the-most-reliable-framework-for-the-long-haul.md",{"name":213,"avatar":214},"Zafar",{"src":215,"alt":213},"https://r2.zafar.dev/img/profile.jpg",{"type":217,"value":218,"toc":284},"minimal",[219,223,228,231,234,238,241,244,248,251,254,258,261,264,268,271,274,278,281],[220,221,222],"p",{},"Choosing a JavaScript framework isn’t just about what works well now. You want something that will keep up with your project over time without getting complicated or outdated. Vue.js has proven itself as a solid choice for developers looking for stability, flexibility, and clear, simple code. Here’s why Vue stands out.",[224,225,227],"h2",{"id":226},"_1-easy-to-work-with-from-day-one","1. Easy to Work With from Day One",[220,229,230],{},"Vue is designed with developers in mind. It uses Single-File Components (SFCs), so everything for a component — HTML, JavaScript, and CSS — is right there in one place. There’s no need for extra files or complex setups.",[220,232,233],{},"Why It Matters: Vue is straightforward, making it easy for developers to pick up and maintain, even if they’re new to the team.",[224,235,237],{"id":236},"_2-community-driven-not-company-driven","2. Community-Driven, Not Company-Driven",[220,239,240],{},"Unlike some frameworks, Vue isn’t led by a big company with its own agenda. Created by Evan You and supported by community contributions, Vue focuses on what developers need. It’s funded by the community, which keeps it on track with what real users want.",[220,242,243],{},"Why It Matters: Vue’s independence means that it’s developed based on community needs, not a corporate roadmap.",[224,245,247],{"id":246},"_3-tools-that-push-javascript-forward","3. Tools That Push JavaScript Forward",[220,249,250],{},"Vue’s team has contributed more than just a framework. They’ve created widely-used tools like Vite (a fast build tool) and Vitest (a testing tool), as well as Nitro, a server engine. These tools help make JavaScript faster and easier for everyone.",[220,252,253],{},"Why It Matters: By using Vue, you’re part of an ecosystem that’s improving the entire JavaScript world, not just Vue itself.",[224,255,257],{"id":256},"_4-flexible-for-any-project-size","4. Flexible for Any Project Size",[220,259,260],{},"Vue isn’t one-size-fits-all. It supports Client-Side Rendering (CSR), Server-Side Rendering (SSR), Static Site Generation (SSG), and Incremental Static Regeneration (ISR). Vue can handle projects big and small, and you can add features as your app grows.",[220,262,263],{},"Why It Matters: You don’t need to switch frameworks as your project scales. Vue’s flexibility lets you start simple and expand as needed.",[224,265,267],{"id":266},"_5-simple-understandable-code","5. Simple, Understandable Code",[220,269,270],{},"Vue’s code is based on familiar HTML, CSS, and JavaScript. There’s no need to learn complex patterns or special setups. Even if you switch to a different tool in the future, Vue’s code structure is easy to follow.",[220,272,273],{},"Why It Matters: Clear code means easier maintenance and faster onboarding for new developers.",[224,275,277],{"id":276},"_6-truly-independent","6. Truly Independent",[220,279,280],{},"Some frameworks are tied to the goals of the companies behind them. Next.js is closely aligned with Vercel, Remix is backed by Shopify, and Svelte has ties to Vercel through its creator. Vue, on the other hand, is funded by the community and is independent.",[220,282,283],{},"Why It Matters: With Vue, there’s no push to optimize for one platform over another. It’s built to work well everywhere.",{"title":73,"searchDepth":285,"depth":285,"links":286},2,[287,288,289,290,291,292],{"id":226,"depth":285,"text":227},{"id":236,"depth":285,"text":237},{"id":246,"depth":285,"text":247},{"id":256,"depth":285,"text":257},{"id":266,"depth":285,"text":267},{"id":276,"depth":285,"text":277},"2025-03-15T00:00:00.000Z","Vue.js has proven itself as a solid choice for developers looking for stability, flexibility, and clear, simple code. Here’s why Vue stands out.","md","https://vuejs.org/logo-uwu.png",{},{"title":14,"description":294},"lBP7YKDedrsrhWz6BN2xw_qo5jd4dKtjlROXEFfE14s",{"id":301,"title":18,"author":302,"body":304,"date":1698,"description":1699,"extension":295,"image":1700,"meta":1701,"minRead":427,"navigation":194,"path":19,"seo":1702,"stem":20,"__hash__":1703},"blog/blog/write-better-typescript-and-less-unit-testing.md",{"name":213,"avatar":303},{"src":215,"alt":213},{"type":217,"value":305,"toc":1692},[306,309,312,315,318,327,330,333,336,340,343,346,506,509,512,773,777,780,783,920,923,926,1068,1072,1075,1078,1081,1245,1248,1251,1413,1417,1420,1423,1679,1682,1685,1688],[220,307,308],{},"I’ve found that using strong and well-defined TypeScript typings can greatly reduce the need for extensive unit testing. While testing is an essential part of software development, it can, no, it will often be time-consuming and can slow down the development process tremendously. With well-typed code, we prevent many errors before they even happen.",[220,310,311],{},"By doing so, we can catch a lot of errors at compile-time, before they make it to testing/production. This not only saves time and effort, but it also makes our code more reliable and easier to maintain.",[220,313,314],{},"That being said, I don’t want to suggest that testing is not important. On the contrary, unit testing is still a crucial part of software development. However, by using TypeScript, we can reduce the amount of testing that needs to be done.",[220,316,317],{},"Remember, the ratio between the production code and the test code could be anywhere between 1:1 and 1:3.",[319,320,321],"blockquote",{},[220,322,323],{},[324,325,326],"em",{},"Tests are good; impossible states are better — Richard Feldman",[220,328,329],{},"In addition, TypeScript allows us to use the concept of “impossible states.” Impossible states are states that are impossible to reach because they are prevented by our typings. By using it, we can eliminate a lot of unnecessary testing, as we know that these states can never happen, and therefore, don’t need to be tested.",[331,332],"hr",{},[220,334,335],{},"Heres common examples of how using better TypeScript typings in React can be more efficient than extensive unit testing:",[224,337,339],{"id":338},"_1-type-checking-props-and-state","1. Type-checking props and state",[220,341,342],{},"In React, components often receive props and manage their own state. Without TypeScript, it can be difficult to ensure that the correct data types are being used for props and state. This can lead to runtime errors and a need for extensive unit testing.",[220,344,345],{},"With TypeScript, however, we can define interfaces for our props and state, which can catch errors at compile-time and eliminate the need for some unit tests. For example:",[347,348,352],"pre",{"className":349,"code":350,"language":351,"meta":73,"style":73},"language-ts shiki shiki-themes material-theme-lighter material-theme material-theme-palenight","interface Props {\n  name: string;\n  age: number;\n  isMale: boolean;\n}\n\ninterface State {\n  count: number;\n}\n\nclass MyComponent extends React.Component\u003CProps, State> {\n  // ...\n}\n","ts",[353,354,355,372,387,400,413,419,425,435,447,452,457,494,501],"code",{"__ignoreMap":73},[356,357,360,364,368],"span",{"class":358,"line":359},"line",1,[356,361,363],{"class":362},"spNyl","interface",[356,365,367],{"class":366},"sBMFI"," Props",[356,369,371],{"class":370},"sMK4o"," {\n",[356,373,374,378,381,384],{"class":358,"line":285},[356,375,377],{"class":376},"swJcz","  name",[356,379,380],{"class":370},":",[356,382,383],{"class":366}," string",[356,385,386],{"class":370},";\n",[356,388,390,393,395,398],{"class":358,"line":389},3,[356,391,392],{"class":376},"  age",[356,394,380],{"class":370},[356,396,397],{"class":366}," number",[356,399,386],{"class":370},[356,401,403,406,408,411],{"class":358,"line":402},4,[356,404,405],{"class":376},"  isMale",[356,407,380],{"class":370},[356,409,410],{"class":366}," boolean",[356,412,386],{"class":370},[356,414,416],{"class":358,"line":415},5,[356,417,418],{"class":370},"}\n",[356,420,422],{"class":358,"line":421},6,[356,423,424],{"emptyLinePlaceholder":194},"\n",[356,426,428,430,433],{"class":358,"line":427},7,[356,429,363],{"class":362},[356,431,432],{"class":366}," State",[356,434,371],{"class":370},[356,436,438,441,443,445],{"class":358,"line":437},8,[356,439,440],{"class":376},"  count",[356,442,380],{"class":370},[356,444,397],{"class":366},[356,446,386],{"class":370},[356,448,450],{"class":358,"line":449},9,[356,451,418],{"class":370},[356,453,455],{"class":358,"line":454},10,[356,456,424],{"emptyLinePlaceholder":194},[356,458,460,463,466,469,472,475,478,481,484,487,489,492],{"class":358,"line":459},11,[356,461,462],{"class":362},"class",[356,464,465],{"class":366}," MyComponent",[356,467,468],{"class":362}," extends",[356,470,471],{"class":366}," React",[356,473,474],{"class":370},".",[356,476,477],{"class":366},"Component",[356,479,480],{"class":370},"\u003C",[356,482,483],{"class":366},"Props",[356,485,486],{"class":370},",",[356,488,432],{"class":366},[356,490,491],{"class":370},">",[356,493,371],{"class":370},[356,495,497],{"class":358,"line":496},12,[356,498,500],{"class":499},"sHwdD","  // ...\n",[356,502,504],{"class":358,"line":503},13,[356,505,418],{"class":370},[220,507,508],{},"By defining these interfaces, we can ensure that the correct data types are being used for our props and state, which can catch errors at compile-time and make our code more reliable.",[220,510,511],{},"Instead of :",[347,513,515],{"className":349,"code":514,"language":351,"meta":73,"style":73},"it('renders with correct props', () => {\n  const wrapper = shallow(\u003CMyComponent name=\"John\" age={30} isMale={true} />);\n  expect(wrapper.exists()).toBe(true);\n});\n\nit('renders with correct state', () => {\n  const wrapper = shallow(\u003CMyComponent name=\"John\" age={30} isMale={true} />);\n  expect(wrapper.state()).toEqual({ count: 0 });\n});\n",[353,516,517,546,612,645,653,657,678,726,765],{"__ignoreMap":73},[356,518,519,523,527,530,534,536,538,541,544],{"class":358,"line":359},[356,520,522],{"class":521},"s2Zo4","it",[356,524,526],{"class":525},"sTEyZ","(",[356,528,529],{"class":370},"'",[356,531,533],{"class":532},"sfazB","renders with correct props",[356,535,529],{"class":370},[356,537,486],{"class":370},[356,539,540],{"class":370}," ()",[356,542,543],{"class":362}," =>",[356,545,371],{"class":370},[356,547,548,551,554,557,560,563,566,569,572,575,578,580,583,585,588,592,595,598,600,602,605,607,610],{"class":358,"line":285},[356,549,550],{"class":362},"  const",[356,552,553],{"class":525}," wrapper",[356,555,556],{"class":370}," =",[356,558,559],{"class":521}," shallow",[356,561,562],{"class":376},"(\u003C",[356,564,565],{"class":366},"MyComponent",[356,567,568],{"class":366}," name",[356,570,571],{"class":376},"=",[356,573,574],{"class":370},"\"",[356,576,577],{"class":532},"John",[356,579,574],{"class":370},[356,581,582],{"class":366}," age",[356,584,571],{"class":376},[356,586,587],{"class":370},"{",[356,589,591],{"class":590},"sbssI","30",[356,593,594],{"class":370},"}",[356,596,597],{"class":366}," isMale",[356,599,571],{"class":376},[356,601,587],{"class":370},[356,603,604],{"class":376},"true",[356,606,594],{"class":370},[356,608,609],{"class":376}," />)",[356,611,386],{"class":370},[356,613,614,617,619,622,624,627,630,632,635,637,640,643],{"class":358,"line":389},[356,615,616],{"class":521},"  expect",[356,618,526],{"class":376},[356,620,621],{"class":525},"wrapper",[356,623,474],{"class":370},[356,625,626],{"class":521},"exists",[356,628,629],{"class":376},"())",[356,631,474],{"class":370},[356,633,634],{"class":521},"toBe",[356,636,526],{"class":376},[356,638,604],{"class":639},"sfNiH",[356,641,642],{"class":376},")",[356,644,386],{"class":370},[356,646,647,649,651],{"class":358,"line":402},[356,648,594],{"class":370},[356,650,642],{"class":525},[356,652,386],{"class":370},[356,654,655],{"class":358,"line":415},[356,656,424],{"emptyLinePlaceholder":194},[356,658,659,661,663,665,668,670,672,674,676],{"class":358,"line":421},[356,660,522],{"class":521},[356,662,526],{"class":525},[356,664,529],{"class":370},[356,666,667],{"class":532},"renders with correct state",[356,669,529],{"class":370},[356,671,486],{"class":370},[356,673,540],{"class":370},[356,675,543],{"class":362},[356,677,371],{"class":370},[356,679,680,682,684,686,688,690,692,694,696,698,700,702,704,706,708,710,712,714,716,718,720,722,724],{"class":358,"line":427},[356,681,550],{"class":362},[356,683,553],{"class":525},[356,685,556],{"class":370},[356,687,559],{"class":521},[356,689,562],{"class":376},[356,691,565],{"class":366},[356,693,568],{"class":366},[356,695,571],{"class":376},[356,697,574],{"class":370},[356,699,577],{"class":532},[356,701,574],{"class":370},[356,703,582],{"class":366},[356,705,571],{"class":376},[356,707,587],{"class":370},[356,709,591],{"class":590},[356,711,594],{"class":370},[356,713,597],{"class":366},[356,715,571],{"class":376},[356,717,587],{"class":370},[356,719,604],{"class":376},[356,721,594],{"class":370},[356,723,609],{"class":376},[356,725,386],{"class":370},[356,727,728,730,732,734,736,739,741,743,746,748,750,753,755,758,761,763],{"class":358,"line":437},[356,729,616],{"class":521},[356,731,526],{"class":376},[356,733,621],{"class":525},[356,735,474],{"class":370},[356,737,738],{"class":521},"state",[356,740,629],{"class":376},[356,742,474],{"class":370},[356,744,745],{"class":521},"toEqual",[356,747,526],{"class":376},[356,749,587],{"class":370},[356,751,752],{"class":376}," count",[356,754,380],{"class":370},[356,756,757],{"class":590}," 0",[356,759,760],{"class":370}," }",[356,762,642],{"class":376},[356,764,386],{"class":370},[356,766,767,769,771],{"class":358,"line":449},[356,768,594],{"class":370},[356,770,642],{"class":525},[356,772,386],{"class":370},[224,774,776],{"id":775},"_2-defining-event-handlers","2. Defining event handlers",[220,778,779],{},"Event handlers are often used to handle user interactions, such as clicks or form submissions. Without TypeScript, it can be difficult to ensure that event handlers are defined correctly and handle the correct types of events.",[220,781,782],{},"With TypeScript, however, we can define types for our event handlers, which can catch errors at compile-time and eliminate the need for some unit tests. For example:",[347,784,786],{"className":349,"code":785,"language":351,"meta":73,"style":73},"interface MyComponentProps {\n  onClick: (event: React.MouseEvent\u003CHTMLButtonElement>) => void;\n}\n\nfunction MyComponent(props: MyComponentProps) {\n  return (\n    \u003Cbutton onClick={props.onClick}>Click me\u003C/button>\n  );\n}\n",[353,787,788,797,835,839,843,863,872,909,916],{"__ignoreMap":73},[356,789,790,792,795],{"class":358,"line":359},[356,791,363],{"class":362},[356,793,794],{"class":366}," MyComponentProps",[356,796,371],{"class":370},[356,798,799,802,804,807,811,813,815,817,820,822,825,828,830,833],{"class":358,"line":285},[356,800,801],{"class":376},"  onClick",[356,803,380],{"class":370},[356,805,806],{"class":370}," (",[356,808,810],{"class":809},"sHdIc","event",[356,812,380],{"class":370},[356,814,471],{"class":366},[356,816,474],{"class":370},[356,818,819],{"class":366},"MouseEvent",[356,821,480],{"class":370},[356,823,824],{"class":366},"HTMLButtonElement",[356,826,827],{"class":370},">)",[356,829,543],{"class":362},[356,831,832],{"class":366}," void",[356,834,386],{"class":370},[356,836,837],{"class":358,"line":389},[356,838,418],{"class":370},[356,840,841],{"class":358,"line":402},[356,842,424],{"emptyLinePlaceholder":194},[356,844,845,848,850,852,855,857,859,861],{"class":358,"line":415},[356,846,847],{"class":362},"function",[356,849,465],{"class":521},[356,851,526],{"class":370},[356,853,854],{"class":809},"props",[356,856,380],{"class":370},[356,858,794],{"class":366},[356,860,642],{"class":370},[356,862,371],{"class":370},[356,864,865,869],{"class":358,"line":421},[356,866,868],{"class":867},"s7zQu","  return",[356,870,871],{"class":376}," (\n",[356,873,874,877,880,883,886,889,892,895,898,901,904,906],{"class":358,"line":427},[356,875,876],{"class":370},"    \u003C",[356,878,879],{"class":525},"button",[356,881,882],{"class":525}," onClick",[356,884,885],{"class":370},"={",[356,887,888],{"class":376},"props.",[356,890,891],{"class":525},"onClick",[356,893,894],{"class":370},"}>",[356,896,897],{"class":525},"Click",[356,899,900],{"class":525}," me",[356,902,903],{"class":370},"\u003C/",[356,905,879],{"class":525},[356,907,908],{"class":370},">\n",[356,910,911,914],{"class":358,"line":437},[356,912,913],{"class":376},"  )",[356,915,386],{"class":370},[356,917,918],{"class":358,"line":449},[356,919,418],{"class":370},[220,921,922],{},"By defining the onClick prop with a type that includes the React.MouseEvent type, we can ensure that the event handler is defined correctly and handles the correct types of events, which can make our code more reliable and reduce the need for unit tests.",[220,924,925],{},"Without TypeScript typings, we would need to write unit tests to ensure that event handlers are defined correctly and handle the correct types of events.",[347,927,929],{"className":349,"code":928,"language":351,"meta":73,"style":73},"it('calls onClick handler when button is clicked', () => {\n  const handleClick = jest.fn();\n  const wrapper = shallow(\u003CMyComponent onClick={handleClick} />);\n  wrapper.find('button').simulate('click');\n  expect(handleClick).toHaveBeenCalled();\n});\n",[353,930,931,952,974,1003,1041,1060],{"__ignoreMap":73},[356,932,933,935,937,939,942,944,946,948,950],{"class":358,"line":359},[356,934,522],{"class":521},[356,936,526],{"class":525},[356,938,529],{"class":370},[356,940,941],{"class":532},"calls onClick handler when button is clicked",[356,943,529],{"class":370},[356,945,486],{"class":370},[356,947,540],{"class":370},[356,949,543],{"class":362},[356,951,371],{"class":370},[356,953,954,956,959,961,964,966,969,972],{"class":358,"line":285},[356,955,550],{"class":362},[356,957,958],{"class":525}," handleClick",[356,960,556],{"class":370},[356,962,963],{"class":525}," jest",[356,965,474],{"class":370},[356,967,968],{"class":521},"fn",[356,970,971],{"class":376},"()",[356,973,386],{"class":370},[356,975,976,978,980,982,984,986,988,990,992,994,997,999,1001],{"class":358,"line":389},[356,977,550],{"class":362},[356,979,553],{"class":525},[356,981,556],{"class":370},[356,983,559],{"class":521},[356,985,562],{"class":376},[356,987,565],{"class":366},[356,989,882],{"class":366},[356,991,571],{"class":376},[356,993,587],{"class":370},[356,995,996],{"class":376},"handleClick",[356,998,594],{"class":370},[356,1000,609],{"class":376},[356,1002,386],{"class":370},[356,1004,1005,1008,1010,1013,1015,1017,1019,1021,1023,1025,1028,1030,1032,1035,1037,1039],{"class":358,"line":402},[356,1006,1007],{"class":525},"  wrapper",[356,1009,474],{"class":370},[356,1011,1012],{"class":521},"find",[356,1014,526],{"class":376},[356,1016,529],{"class":370},[356,1018,879],{"class":532},[356,1020,529],{"class":370},[356,1022,642],{"class":376},[356,1024,474],{"class":370},[356,1026,1027],{"class":521},"simulate",[356,1029,526],{"class":376},[356,1031,529],{"class":370},[356,1033,1034],{"class":532},"click",[356,1036,529],{"class":370},[356,1038,642],{"class":376},[356,1040,386],{"class":370},[356,1042,1043,1045,1047,1049,1051,1053,1056,1058],{"class":358,"line":415},[356,1044,616],{"class":521},[356,1046,526],{"class":376},[356,1048,996],{"class":525},[356,1050,642],{"class":376},[356,1052,474],{"class":370},[356,1054,1055],{"class":521},"toHaveBeenCalled",[356,1057,971],{"class":376},[356,1059,386],{"class":370},[356,1061,1062,1064,1066],{"class":358,"line":421},[356,1063,594],{"class":370},[356,1065,642],{"class":525},[356,1067,386],{"class":370},[224,1069,1071],{"id":1070},"_3-type-checking-external-apis","3. Type-checking external APIs",[220,1073,1074],{},"For any app/webapp it’s common to use external APIs, such as REST APIs or GraphQL APIs, to retrieve data for our components. Without TypeScript, it can be difficult to ensure that the correct data types are being used throughout the app. This makes refactoring code an absolute nightmare.",[220,1076,1077],{},"Using types, Backend/API developers will also be less restricted knowing the frontend can quickly grab the new DTO and quckly update frontend code. This ensure less legacy bloat and faster development cycle.",[220,1079,1080],{},"For example:",[347,1082,1084],{"className":349,"code":1083,"language":351,"meta":73,"style":73},"interface UserDto {\n  id: number;\n  name: string;\n  email: string;\n}\n\nasync function fetchUser(id: number): Promise\u003CUserDto> {\n  const response = await fetch(`/users/${id}`);\n  const data = await response.json();\n  return data as User;\n}\n",[353,1085,1086,1095,1106,1116,1127,1131,1135,1170,1205,1227,1241],{"__ignoreMap":73},[356,1087,1088,1090,1093],{"class":358,"line":359},[356,1089,363],{"class":362},[356,1091,1092],{"class":366}," UserDto",[356,1094,371],{"class":370},[356,1096,1097,1100,1102,1104],{"class":358,"line":285},[356,1098,1099],{"class":376},"  id",[356,1101,380],{"class":370},[356,1103,397],{"class":366},[356,1105,386],{"class":370},[356,1107,1108,1110,1112,1114],{"class":358,"line":389},[356,1109,377],{"class":376},[356,1111,380],{"class":370},[356,1113,383],{"class":366},[356,1115,386],{"class":370},[356,1117,1118,1121,1123,1125],{"class":358,"line":402},[356,1119,1120],{"class":376},"  email",[356,1122,380],{"class":370},[356,1124,383],{"class":366},[356,1126,386],{"class":370},[356,1128,1129],{"class":358,"line":415},[356,1130,418],{"class":370},[356,1132,1133],{"class":358,"line":421},[356,1134,424],{"emptyLinePlaceholder":194},[356,1136,1137,1140,1143,1146,1148,1151,1153,1155,1158,1161,1163,1166,1168],{"class":358,"line":427},[356,1138,1139],{"class":362},"async",[356,1141,1142],{"class":362}," function",[356,1144,1145],{"class":521}," fetchUser",[356,1147,526],{"class":370},[356,1149,1150],{"class":809},"id",[356,1152,380],{"class":370},[356,1154,397],{"class":366},[356,1156,1157],{"class":370},"):",[356,1159,1160],{"class":366}," Promise",[356,1162,480],{"class":370},[356,1164,1165],{"class":366},"UserDto",[356,1167,491],{"class":370},[356,1169,371],{"class":370},[356,1171,1172,1174,1177,1179,1182,1185,1187,1190,1193,1196,1198,1201,1203],{"class":358,"line":437},[356,1173,550],{"class":362},[356,1175,1176],{"class":525}," response",[356,1178,556],{"class":370},[356,1180,1181],{"class":867}," await",[356,1183,1184],{"class":521}," fetch",[356,1186,526],{"class":376},[356,1188,1189],{"class":370},"`",[356,1191,1192],{"class":532},"/users/",[356,1194,1195],{"class":370},"${",[356,1197,1150],{"class":525},[356,1199,1200],{"class":370},"}`",[356,1202,642],{"class":376},[356,1204,386],{"class":370},[356,1206,1207,1209,1212,1214,1216,1218,1220,1223,1225],{"class":358,"line":449},[356,1208,550],{"class":362},[356,1210,1211],{"class":525}," data",[356,1213,556],{"class":370},[356,1215,1181],{"class":867},[356,1217,1176],{"class":525},[356,1219,474],{"class":370},[356,1221,1222],{"class":521},"json",[356,1224,971],{"class":376},[356,1226,386],{"class":370},[356,1228,1229,1231,1233,1236,1239],{"class":358,"line":454},[356,1230,868],{"class":867},[356,1232,1211],{"class":525},[356,1234,1235],{"class":867}," as",[356,1237,1238],{"class":366}," User",[356,1240,386],{"class":370},[356,1242,1243],{"class":358,"line":459},[356,1244,418],{"class":370},[220,1246,1247],{},"By defining the User interface for the API response, we can ensure that the correct data types are being used for the API response, which can catch errors at compile-time and make our code more reliable.",[220,1249,1250],{},"Without TS , we would need to write unit tests to ensure that the correct data types are being used for the API responses. For example:",[347,1252,1254],{"className":349,"code":1253,"language":351,"meta":73,"style":73},"it('fetches user data and returns the correct object', async () => {\n  const expectedUser = { id: 1, name: 'John', email: 'john@example.com' };\n  fetch.mockResponseOnce(JSON.stringify(expectedUser));\n  const user = await fetchUser(1);\n  expect(user).toEqual(expectedUser);\n});\n",[353,1255,1256,1280,1330,1360,1382,1405],{"__ignoreMap":73},[356,1257,1258,1260,1262,1264,1267,1269,1271,1274,1276,1278],{"class":358,"line":359},[356,1259,522],{"class":521},[356,1261,526],{"class":525},[356,1263,529],{"class":370},[356,1265,1266],{"class":532},"fetches user data and returns the correct object",[356,1268,529],{"class":370},[356,1270,486],{"class":370},[356,1272,1273],{"class":362}," async",[356,1275,540],{"class":370},[356,1277,543],{"class":362},[356,1279,371],{"class":370},[356,1281,1282,1284,1287,1289,1292,1295,1297,1300,1302,1304,1306,1309,1311,1313,1315,1318,1320,1322,1325,1327],{"class":358,"line":285},[356,1283,550],{"class":362},[356,1285,1286],{"class":525}," expectedUser",[356,1288,556],{"class":370},[356,1290,1291],{"class":370}," {",[356,1293,1294],{"class":376}," id",[356,1296,380],{"class":370},[356,1298,1299],{"class":590}," 1",[356,1301,486],{"class":370},[356,1303,568],{"class":376},[356,1305,380],{"class":370},[356,1307,1308],{"class":370}," '",[356,1310,577],{"class":532},[356,1312,529],{"class":370},[356,1314,486],{"class":370},[356,1316,1317],{"class":376}," email",[356,1319,380],{"class":370},[356,1321,1308],{"class":370},[356,1323,1324],{"class":532},"john@example.com",[356,1326,529],{"class":370},[356,1328,1329],{"class":370}," };\n",[356,1331,1332,1335,1337,1340,1342,1345,1347,1350,1352,1355,1358],{"class":358,"line":389},[356,1333,1334],{"class":525},"  fetch",[356,1336,474],{"class":370},[356,1338,1339],{"class":521},"mockResponseOnce",[356,1341,526],{"class":376},[356,1343,1344],{"class":525},"JSON",[356,1346,474],{"class":370},[356,1348,1349],{"class":521},"stringify",[356,1351,526],{"class":376},[356,1353,1354],{"class":525},"expectedUser",[356,1356,1357],{"class":376},"))",[356,1359,386],{"class":370},[356,1361,1362,1364,1367,1369,1371,1373,1375,1378,1380],{"class":358,"line":402},[356,1363,550],{"class":362},[356,1365,1366],{"class":525}," user",[356,1368,556],{"class":370},[356,1370,1181],{"class":867},[356,1372,1145],{"class":521},[356,1374,526],{"class":376},[356,1376,1377],{"class":590},"1",[356,1379,642],{"class":376},[356,1381,386],{"class":370},[356,1383,1384,1386,1388,1391,1393,1395,1397,1399,1401,1403],{"class":358,"line":415},[356,1385,616],{"class":521},[356,1387,526],{"class":376},[356,1389,1390],{"class":525},"user",[356,1392,642],{"class":376},[356,1394,474],{"class":370},[356,1396,745],{"class":521},[356,1398,526],{"class":376},[356,1400,1354],{"class":525},[356,1402,642],{"class":376},[356,1404,386],{"class":370},[356,1406,1407,1409,1411],{"class":358,"line":421},[356,1408,594],{"class":370},[356,1410,642],{"class":525},[356,1412,386],{"class":370},[224,1414,1416],{"id":1415},"_4-type-checking-redux-actions","4. Type-checking Redux actions",[220,1418,1419],{},"When using Redux to manage state in a web application, it’s important to ensure that the actions are well-typed and consistent. Without TypeScript, we might need to write extensive unit tests to ensure that the actions are being dispatched correctly and handling errors appropriately.",[220,1421,1422],{},"Instead, we can define interfaces for our Redux actions. For example:",[347,1424,1426],{"className":349,"code":1425,"language":351,"meta":73,"style":73},"interface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\n\ninterface FetchUserAction {\n  type: 'FETCH_USER';\n  payload: {\n    id: number;\n  };\n}\ninterface ReceiveUserAction {\n  type: 'RECEIVE_USER';\n  payload: {\n    user: User;\n  };\n}\ntype UserAction = FetchUserAction | ReceiveUserAction;\nfunction fetchUser(id: number): UserAction {\n  return {\n    type: 'FETCH_USER',\n    payload: { id }\n  };\n}\n",[353,1427,1428,1436,1446,1456,1466,1470,1474,1478,1487,1503,1512,1523,1528,1532,1542,1558,1567,1579,1584,1589,1609,1630,1637,1654,1669,1674],{"__ignoreMap":73},[356,1429,1430,1432,1434],{"class":358,"line":359},[356,1431,363],{"class":362},[356,1433,1238],{"class":366},[356,1435,371],{"class":370},[356,1437,1438,1440,1442,1444],{"class":358,"line":285},[356,1439,1099],{"class":376},[356,1441,380],{"class":370},[356,1443,397],{"class":366},[356,1445,386],{"class":370},[356,1447,1448,1450,1452,1454],{"class":358,"line":389},[356,1449,377],{"class":376},[356,1451,380],{"class":370},[356,1453,383],{"class":366},[356,1455,386],{"class":370},[356,1457,1458,1460,1462,1464],{"class":358,"line":402},[356,1459,1120],{"class":376},[356,1461,380],{"class":370},[356,1463,383],{"class":366},[356,1465,386],{"class":370},[356,1467,1468],{"class":358,"line":415},[356,1469,418],{"class":370},[356,1471,1472],{"class":358,"line":421},[356,1473,424],{"emptyLinePlaceholder":194},[356,1475,1476],{"class":358,"line":427},[356,1477,424],{"emptyLinePlaceholder":194},[356,1479,1480,1482,1485],{"class":358,"line":437},[356,1481,363],{"class":362},[356,1483,1484],{"class":366}," FetchUserAction",[356,1486,371],{"class":370},[356,1488,1489,1492,1494,1496,1499,1501],{"class":358,"line":449},[356,1490,1491],{"class":376},"  type",[356,1493,380],{"class":370},[356,1495,1308],{"class":370},[356,1497,1498],{"class":532},"FETCH_USER",[356,1500,529],{"class":370},[356,1502,386],{"class":370},[356,1504,1505,1508,1510],{"class":358,"line":454},[356,1506,1507],{"class":376},"  payload",[356,1509,380],{"class":370},[356,1511,371],{"class":370},[356,1513,1514,1517,1519,1521],{"class":358,"line":459},[356,1515,1516],{"class":376},"    id",[356,1518,380],{"class":370},[356,1520,397],{"class":366},[356,1522,386],{"class":370},[356,1524,1525],{"class":358,"line":496},[356,1526,1527],{"class":370},"  };\n",[356,1529,1530],{"class":358,"line":503},[356,1531,418],{"class":370},[356,1533,1535,1537,1540],{"class":358,"line":1534},14,[356,1536,363],{"class":362},[356,1538,1539],{"class":366}," ReceiveUserAction",[356,1541,371],{"class":370},[356,1543,1545,1547,1549,1551,1554,1556],{"class":358,"line":1544},15,[356,1546,1491],{"class":376},[356,1548,380],{"class":370},[356,1550,1308],{"class":370},[356,1552,1553],{"class":532},"RECEIVE_USER",[356,1555,529],{"class":370},[356,1557,386],{"class":370},[356,1559,1561,1563,1565],{"class":358,"line":1560},16,[356,1562,1507],{"class":376},[356,1564,380],{"class":370},[356,1566,371],{"class":370},[356,1568,1570,1573,1575,1577],{"class":358,"line":1569},17,[356,1571,1572],{"class":376},"    user",[356,1574,380],{"class":370},[356,1576,1238],{"class":366},[356,1578,386],{"class":370},[356,1580,1582],{"class":358,"line":1581},18,[356,1583,1527],{"class":370},[356,1585,1587],{"class":358,"line":1586},19,[356,1588,418],{"class":370},[356,1590,1592,1595,1598,1600,1602,1605,1607],{"class":358,"line":1591},20,[356,1593,1594],{"class":362},"type",[356,1596,1597],{"class":366}," UserAction",[356,1599,556],{"class":370},[356,1601,1484],{"class":366},[356,1603,1604],{"class":370}," |",[356,1606,1539],{"class":366},[356,1608,386],{"class":370},[356,1610,1612,1614,1616,1618,1620,1622,1624,1626,1628],{"class":358,"line":1611},21,[356,1613,847],{"class":362},[356,1615,1145],{"class":521},[356,1617,526],{"class":370},[356,1619,1150],{"class":809},[356,1621,380],{"class":370},[356,1623,397],{"class":366},[356,1625,1157],{"class":370},[356,1627,1597],{"class":366},[356,1629,371],{"class":370},[356,1631,1633,1635],{"class":358,"line":1632},22,[356,1634,868],{"class":867},[356,1636,371],{"class":370},[356,1638,1640,1643,1645,1647,1649,1651],{"class":358,"line":1639},23,[356,1641,1642],{"class":376},"    type",[356,1644,380],{"class":370},[356,1646,1308],{"class":370},[356,1648,1498],{"class":532},[356,1650,529],{"class":370},[356,1652,1653],{"class":370},",\n",[356,1655,1657,1660,1662,1664,1666],{"class":358,"line":1656},24,[356,1658,1659],{"class":376},"    payload",[356,1661,380],{"class":370},[356,1663,1291],{"class":370},[356,1665,1294],{"class":525},[356,1667,1668],{"class":370}," }\n",[356,1670,1672],{"class":358,"line":1671},25,[356,1673,1527],{"class":370},[356,1675,1677],{"class":358,"line":1676},26,[356,1678,418],{"class":370},[220,1680,1681],{},"By defining the UserAction interface for the Redux actions, we can ensure that the actions are well-typed and consistent, which can catch errors at compile-time and make our code more reliable.",[220,1683,1684],{},"In summary, using better TypeScript typings will help catch errors at compile-time, make our code more reliable, and eliminate the need for some unit tests. By ensuring that the correct data types are being used for props, state, event handlers, and API responses, we can reduce cost and make ship happen faster",[220,1686,1687],{},"Important Note: Please dont block testing/preview CICD just because of Type errors. Blocking main or production sure but dont slowdown developers testing prematurely. Happy coding!",[1689,1690,1691],"style",{},"html pre.shiki code .spNyl, html code.shiki .spNyl{--shiki-light:#9C3EDA;--shiki-default:#C792EA;--shiki-dark:#C792EA}html pre.shiki code .sBMFI, html code.shiki .sBMFI{--shiki-light:#E2931D;--shiki-default:#FFCB6B;--shiki-dark:#FFCB6B}html pre.shiki code .sMK4o, html code.shiki .sMK4o{--shiki-light:#39ADB5;--shiki-default:#89DDFF;--shiki-dark:#89DDFF}html pre.shiki code .swJcz, html code.shiki .swJcz{--shiki-light:#E53935;--shiki-default:#F07178;--shiki-dark:#F07178}html pre.shiki code .sHwdD, html code.shiki .sHwdD{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#546E7A;--shiki-default-font-style:italic;--shiki-dark:#676E95;--shiki-dark-font-style:italic}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .s2Zo4, html code.shiki .s2Zo4{--shiki-light:#6182B8;--shiki-default:#82AAFF;--shiki-dark:#82AAFF}html pre.shiki code .sTEyZ, html code.shiki .sTEyZ{--shiki-light:#90A4AE;--shiki-default:#EEFFFF;--shiki-dark:#BABED8}html pre.shiki code .sfazB, html code.shiki .sfazB{--shiki-light:#91B859;--shiki-default:#C3E88D;--shiki-dark:#C3E88D}html pre.shiki code .sbssI, html code.shiki .sbssI{--shiki-light:#F76D47;--shiki-default:#F78C6C;--shiki-dark:#F78C6C}html pre.shiki code .sfNiH, html code.shiki .sfNiH{--shiki-light:#FF5370;--shiki-default:#FF9CAC;--shiki-dark:#FF9CAC}html pre.shiki code .sHdIc, html code.shiki .sHdIc{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#EEFFFF;--shiki-default-font-style:italic;--shiki-dark:#BABED8;--shiki-dark-font-style:italic}html pre.shiki code .s7zQu, html code.shiki .s7zQu{--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#89DDFF;--shiki-default-font-style:italic;--shiki-dark:#89DDFF;--shiki-dark-font-style:italic}",{"title":73,"searchDepth":285,"depth":285,"links":1693},[1694,1695,1696,1697],{"id":338,"depth":285,"text":339},{"id":775,"depth":285,"text":776},{"id":1070,"depth":285,"text":1071},{"id":1415,"depth":285,"text":1416},"2025-01-28T00:00:00.000Z","Why designing digital experiences that encourage users to slow down and engage deeply can lead to more meaningful interactions and better outcomes.","https://images.pexels.com/photos/4050314/pexels-photo-4050314.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",{},{"title":18,"description":1699},"2AIHcKmV3pZpnDsK_vGbrezSEA3tpH0rEJt-AqQoP4Y",{"id":1705,"title":10,"author":1706,"body":1708,"date":1965,"description":1966,"extension":295,"image":1967,"meta":1968,"minRead":415,"navigation":194,"path":11,"seo":1969,"stem":12,"__hash__":1970},"blog/blog/git-cheatsheet.md",{"name":213,"avatar":1707},{"src":215,"alt":213},{"type":217,"value":1709,"toc":1950},[1710,1714,1760,1764,1790,1794,1826,1830,1855,1859,1885,1889,1896,1904,1907,1911,1916,1919,1923,1926,1929,1933,1936,1940,1943,1947],[224,1711,1713],{"id":1712},"basic-commands","Basic Commands",[1715,1716,1717,1724,1730,1736,1742,1748,1754],"ul",{},[1718,1719,1720,1723],"li",{},[353,1721,1722],{},"git init",": Initialize a new Git repository",[1718,1725,1726,1729],{},[353,1727,1728],{},"git clone \u003Crepository>",": Clone an existing repository",[1718,1731,1732,1735],{},[353,1733,1734],{},"git add \u003Cfile>",": Add a file to the staging area",[1718,1737,1738,1741],{},[353,1739,1740],{},"git commit -m \"\u003Cmessage>\"",": Commit changes with a message",[1718,1743,1744,1747],{},[353,1745,1746],{},"git push",": Push changes to the remote repository",[1718,1749,1750,1753],{},[353,1751,1752],{},"git pull",": Pull changes from the remote repository",[1718,1755,1756,1759],{},[353,1757,1758],{},"git status",": Check the status of the repository",[224,1761,1763],{"id":1762},"branching","Branching",[1715,1765,1766,1772,1778,1784],{},[1718,1767,1768,1771],{},[353,1769,1770],{},"git branch \u003Cbranch>",": Create a new branch",[1718,1773,1774,1777],{},[353,1775,1776],{},"git checkout \u003Cbranch>",": Switch to a different branch",[1718,1779,1780,1783],{},[353,1781,1782],{},"git merge \u003Cbranch>",": Merge a branch into the current branch",[1718,1785,1786,1789],{},[353,1787,1788],{},"git branch -d \u003Cbranch>",": Delete a branch",[224,1791,1793],{"id":1792},"other-useful-commands","Other Useful Commands",[1715,1795,1796,1802,1808,1814,1820],{},[1718,1797,1798,1801],{},[353,1799,1800],{},"git log",": View the commit history",[1718,1803,1804,1807],{},[353,1805,1806],{},"git diff",": View the changes made in the repository",[1718,1809,1810,1813],{},[353,1811,1812],{},"git reset \u003Cfile>",": Unstage a file",[1718,1815,1816,1819],{},[353,1817,1818],{},"git stash",": Save changes temporarily",[1718,1821,1822,1825],{},[353,1823,1824],{},"git stash pop",": Restore the most recently stashed changes",[224,1827,1829],{"id":1828},"basic-workflow","Basic Workflow",[1831,1832,1833,1843,1849],"ol",{},[1718,1834,1835,1836,1839,1840,474],{},"Make changes to your local repository: Create or edit files, add them to the staging area using ",[353,1837,1838],{},"git add",", and then commit the changes using ",[353,1841,1842],{},"git commit",[1718,1844,1845,1846,1848],{},"Push your changes to the remote repository: Use ",[353,1847,1746],{}," to send your committed changes to the remote repository.",[1718,1850,1851,1852,1854],{},"Update your local repository with changes from the remote repository: Use ",[353,1853,1752],{}," to fetch and merge changes from the remote repository into your local repository.",[224,1856,1858],{"id":1857},"branching-workflow","Branching Workflow",[1831,1860,1861,1867,1873,1876],{},[1718,1862,1863,1864,1866],{},"Create a new branch: Use ",[353,1865,1770],{}," to create a new branch.",[1718,1868,1869,1870,1872],{},"Switch to the new branch: Use ",[353,1871,1776],{}," to switch to the new branch.",[1718,1874,1875],{},"Make changes and commit them as usual.",[1718,1877,1878,1879,1881,1882,1884],{},"Merge the branch into the main branch: When you are ready to incorporate the changes from your new branch into the main branch (usually master), switch back to the main branch using ",[353,1880,1776],{}," and then use ",[353,1883,1782],{}," to merge the changes from your new branch into the main branch.",[224,1886,1888],{"id":1887},"undo-a-commit-thats-already-pushed","Undo a Commit That's Already Pushed",[220,1890,1891,1892,1895],{},"If you want to leave the original commit in place, but just undo the changes it made, you can use the ",[353,1893,1894],{},"git revert"," command to create a new commit that undoes the changes made by the original commit. For example:",[347,1897,1902],{"className":1898,"code":1900,"language":1901},[1899],"language-text","git revert \u003Ccommit-hash>\n","text",[353,1903,1900],{"__ignoreMap":73},[220,1905,1906],{},"This will create a new commit that undoes the changes made in the original commit. You can then push the revert commit to the remote repository to undo the changes on the remote.",[224,1908,1910],{"id":1909},"common-developer-mistakes-when-using-git","Common Developer Mistakes When Using Git",[1912,1913,1915],"h3",{"id":1914},"forgetting-to-commit-changes","Forgetting to Commit Changes",[220,1917,1918],{},"It's important to commit your changes regularly so that you have a record of the progress you have made. If you forget to commit your changes, you may lose your work if something goes wrong.",[1912,1920,1922],{"id":1921},"not-committing-often-enough","Not Committing Often Enough",[220,1924,1925],{},"On the other hand, it's also important to commit your changes often enough so that you don't have too many changes in a single commit. Large commits can be harder to review and troubleshoot if there are problems.",[220,1927,1928],{},"Try to commit at least once per hour.",[1912,1930,1932],{"id":1931},"not-branching","Not Branching",[220,1934,1935],{},"It's a good idea to use branches when working on new features or making significant changes to your codebase. This helps to keep your main branch (usually master) stable and allows you to work on multiple features at the same time.",[1912,1937,1939],{"id":1938},"not-keeping-the-main-branch-clean","Not Keeping the Main Branch Clean",[220,1941,1942],{},"It's important to keep your main branch (usually master) clean and only include well-tested code. This makes it easier to roll back changes if necessary and reduces the risk of introducing bugs into your codebase.",[1912,1944,1946],{"id":1945},"not-reviewing-changes-before-merging","Not Reviewing Changes Before Merging",[220,1948,1949],{},"It's a good idea to review changes before merging them into the main branch, especially if you are working with a team. This helps to ensure that the code is of high quality and does not introduce any issues.",{"title":73,"searchDepth":285,"depth":285,"links":1951},[1952,1953,1954,1955,1956,1957,1958],{"id":1712,"depth":285,"text":1713},{"id":1762,"depth":285,"text":1763},{"id":1792,"depth":285,"text":1793},{"id":1828,"depth":285,"text":1829},{"id":1857,"depth":285,"text":1858},{"id":1887,"depth":285,"text":1888},{"id":1909,"depth":285,"text":1910,"children":1959},[1960,1961,1962,1963,1964],{"id":1914,"depth":389,"text":1915},{"id":1921,"depth":389,"text":1922},{"id":1931,"depth":389,"text":1932},{"id":1938,"depth":389,"text":1939},{"id":1945,"depth":389,"text":1946},"2022-04-23T00:00:00.000Z","A comprehensive reference guide to Git commands and workflows for developers of all experience levels, with tips to avoid common mistakes.","https://images.unsplash.com/photo-1556075798-4825dfaaf498?q=80&w=800",{},{"title":10,"description":1966},"xOAJpcRsOh2E_FmBmfN2qCidEiG9O1DfAtvbnBHSoLk",{"data":1972,"body":1973},{},{"type":1974,"children":1975},"root",[1976],{"type":1977,"tag":220,"props":1978,"children":1979},"element",{},[1980],{"type":1901,"value":1981},"I specialize in full-stack development and product management. This includes designing, simplifying, building and scaling solutions for startups using first-principle thinking. My expertise spans multiple industries, and I focus on creating useful and impactful products that make a real difference in people's lives.",{"data":1983,"body":1984},{},{"type":1974,"children":1985},[1986],{"type":1977,"tag":220,"props":1987,"children":1988},{},[1989],{"type":1901,"value":1990},"My process is collaborative and iterative, typically involving a strong customer-developer feedback loop and focus on delivering value quickly. Communication is key, and there is no room for ego in the pursuit of excellence.",{"data":1992,"body":1993},{},{"type":1974,"children":1994},[1995],{"type":1977,"tag":220,"props":1996,"children":1997},{},[1998],{"type":1901,"value":1999},"Absolutely! I love working with startups to help shape their product vision and create solutions from the ground up. I've been involved in multiple zero-to-one startups and have experience taking ideas to MVP in as little as 1 week, and to product launch in as little as 2 weeks.",1746204199847]